---
plugin: unistra.glpi.inv

glpi_url: <GLPI_URL>
#glpi_verify_certs: False
#glpi_use_headers: True
glpi_apptoken: <GLPI_APPTOKEN>
glpi_usertoken: <GLPI_USERTOKEN>
#glpi_username: <GLPI_USERNAME>
#glpi_password: <GLPI_PASSWORD>

# Note: Vaulted values is supported for glpi_apptoken, glpi_usertoken, glpi_password
#glpi_apptoken: !vault |
#  $ANSIBLE_VAULT;1.1;AES256
#  38646230343434633064376635336662636135383139393336303232353433306233323563343638
#  3237363934316636646235303563313736313035383636380a366138663738366565373639646334
#  35653536366239666666633939326665646130636333373361633337383662386230326437366231
#  3564643735336565620a323736636635373361343036373962613530663334373730636231386633
#  3031
#glpi_usertoken: !vault |
#  $ANSIBLE_VAULT;1.1;AES256
#  62626135646432323938323937653665326162303139313061626663396261653065373933336531
#  ...
##glpi_password: !vault |
##  $ANSIBLE_VAULT;1.1;AES256
##  31346130656564316430646366386562636666656531643038663332393035626164326536373731
##  ...

queries:
  #
  # Network equipments
  #
  nethosts:
    itemtype: NetworkEquipment
    fields: [1] # name
    criteria:
    - { link: 'AND', field: 31, searchtype: contains, value: '^Running$' }
    hostname: $1

  #
  # Physical servers
  #
  servers:
    #retrieve: yes
    children: [dell, hp]
    itemtype: Computer
    #fields: [1, 33, 23, 31] # name, domain, fabricant, state, type
    fields:
      - 1   # name
      - 4   # ComputerType.name
      - 33 # Domain.name
      - 23  # Manufacturer.name
      - 31  # State.completename
      - 45  # OperatingSystem.name
      - 46  # OperatingSystemVersion.name
    retrieve: yes
    criteria:
    - { link: AND, field: 4, searchtype: contains, value: '^Rack Mount Chassis$' }
    - { link: AND, field: 31, searchtype: contains, value: '^Running$' }
    hostname: $1.$33
    hostvars:
      type: $4
      manufacturer: $23
      state: $31
      domain: $33
      os_name: $45
      os_version: $46

  dell:
    criteria:
    - { link: AND, field: 23, searchtype: contains, value: 'Dell' }

  hp:
    criteria:
    - { link: AND, field: 23, searchtype: contains, value: 'HP' }


  #
  # Servers by system
  #
  hosts:
    children: [unix, windows]
    itemtype: Computer
    fields:
      - 1   # name
      - 4   # ComputerType.name
      - 33  # Domain.name
      - 23  # Manufacturer.name
      - 31  # State.completename
      - 45  # Item_OperatingSystem.OperatingSystem.name
      - 46  # Item_OperatingSystem.OperatingSystemVersion.name
    criteria:
    - { link: AND, field: 31, searchtype: contains, value: '^Running$' }
    hostname: $1.$33
    hostvars:
      domain: $33
      type: $4
      state: $31
      os_name: $45
      os_version: $46

  ## Windows servers
  windows:
    children: [windows2008, windows2012, windows2016]
    criteria:
    - { link: AND, field: 45, searchtype: contains, value: 'Windows' }
    vars:
      ansible_connection: winrm
      ansible_winrm_transport: kerberos
      ansible_winrm_kinit_mode: manual
      ansible_port: 5985

  windows2008:
    criteria:
    - { link: AND, field: 46, searchtype: contains, value: '2008' }
  windows2012:
    criteria:
    - { link: AND, field: 46, searchtype: contains, value: '2012' }
  windows2016:
    criteria:
    - { link: AND, field: 46, searchtype: contains, value: '2016' }

  ## Unix servers
  unix:
    children: [linux, bsd]
    vars:
      ansible_connection: ssh
      ansible_port: 22
      ansible_user: root

  # BSD servers
  bsd: { children: [freebsd] }

  freebsd:
    children: [freebsd7, freebsd10]
    criteria:
    - { link: AND, field: 45, searchtype: contains, value: 'FreeBSD' }
  freebsd7:
    criteria:
    - { link: AND, field: 46, searchtype: contains, value: '^7' }
  freebsd10:
    criteria:
    - { link: AND, field: 46, searchtype: contains, value: '^10' }

  ## Linux servers
  linux: { children: [debian, ubuntu, centos] }

  debian:
    criteria:
    - { link: AND, field: 45, searchtype: contains, value: 'Debian' }

  ubuntu:
    #retrieve: yes
    children: [ubuntu9, ubuntu10, ubuntu12, ubuntu14, ubuntu16, ubuntu18]
    criteria:
    - { link: AND, field: 45, searchtype: contains, value: '^Ubuntu$' }
    retrieve: yes # Force retrieving of all ubuntu hosts
  ubuntu9:
    criteria:
    - { link: AND, field: 46, searchtype: contains, value: '^9' }
    # wsql1 et wsql2 ...
    #- { link: OR, field: 45, searchtype: contains, value: '^Ubuntu 9.10$' }
  ubuntu10:
    criteria:
    - { link: AND, field: 46, searchtype: contains, value: '^10.04$' }
  ubuntu12:
    criteria:
    - { link: AND, field: 46, searchtype: contains, value: '^12.04$' }
  ubuntu14:
    criteria:
    - { link: AND, field: 46, searchtype: contains, value: '^14.04$' }
  ubuntu16:
    criteria:
    - { link: AND, field: 46, searchtype: contains, value: '^16.04$' }
  ubuntu18:
    criteria:
    - { link: AND, field: 46, searchtype: contains, value: '^18.04$' }

  centos:
    children: [centos5, centos6, centos7]
    criteria:
    - { link: AND, field: 45, searchtype: contains, value: '^CentOS$' }
    retrieve: yes
  centos5:
    criteria:
    - { link: AND, field: 46, searchtype: contains, value: '^5' }
  centos6:
    criteria:
    - { link: AND, field: 46, searchtype: contains, value: '^6' }
  centos7:
    criteria:
    - { link: AND, field: 46, searchtype: contains, value: '^7' }

  #
  # Virtualisation.
  #
  kvm_hypervisors:
    itemtype: Computer
    fields: [1, 33, 160]
    criteria:
    - { link: AND, field: 163, searchtype: contains, value: '^libvirt$' }
    - { link: AND, field: 161, searchtype: contains, value: '^running$' }
    hostname: $1.$33
    hostvars:
      vms: $160

  kvm_vms:
    itemtype: Computer
    fields: [160]
    criteria:
    - { link: AND, field: 163, searchtype: contains, value: '^libvirt$' }
    - { link: AND, field: 161, searchtype: contains, value: '^running$' }
    hostname: $160
    hostvars:
      hypervisor: $1

  #
  # Containers.
  #
  docker_containers:
    itemtype: Computer
    fields: [160]
    criteria:
    - { link: AND, field: 163, searchtype: contains, value: '^docker$' }
    - { link: AND, field: 161, searchtype: contains, value: '^running$' }
    hostname: $160
    hostvars:
      hypervisor: $1
